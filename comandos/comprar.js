const Discord = require('discord.js')
const config = require('../config.json')

module.exports.run = async (client, message, args, database) => {

    let loja = new Discord.RichEmbed()
    .setAuthor(`Escolha uma Loja`, `https://img.icons8.com/cotton/2x/online-shop--v1.png`)
    .setDescription(`\n\u200b\nEscolha uma das minhas lojas para comprar os seus produtos! Brevemente terei maior variedade de lojas onde vocÃª poderÃ¡ investir o seu dinheiro. Boas compras!\n\u200b`)
    .addField(`ğŸš€ FoguetÃµes`, `Loja de foguetÃµes`, true)
    .addField(`ğŸ“š Brevemente`, `Loja de ...`, true)
    .addField(`ğŸ“š Brevemente`, `Loja de ...\n\u200b`, true)
    .setFooter(`CashMarket - Lojas`, client.user.avatarURL)
    .setThumbnail('https://image.flaticon.com/icons/png/512/265/265754.png')
    .setTimestamp()
    .setColor(`#FFB800`)

    let msg1 = await message.channel.send(loja)

    let emojis = ['ğŸš€'];
    for (const i in emojis) await msg1.react(emojis[i]);

    const filter = (r, u) => r.me && u.equals(message.author), 
    collector = msg1.createReactionCollector(filter, { max: 1, time: 5 * 60 * 1000 });

collector.on('collect', async (r) => {
    switch (r.emoji.name) {
        case 'ğŸš€': {
            
            let ref = await database.ref(`FoguetÃ£o/${message.author.id}/CombustÃ­vel`)
            let snap = await ref.once('value')
        
            let ref1 = await database.ref(`FoguetÃ£o/${message.author.id}/Motor`)
            let snap1 = await ref1.once('value')
        
            let ref2 = await database.ref(`FoguetÃ£o/${message.author.id}/Lataria`)
            let snap2 = await ref2.once('value')
        
            if(snap.val() && snap1.val() && snap2.val()){
                message.channel.send(`ğŸš€ O seu FoguetÃ£o estÃ¡ pronto para voar! Digite \`lancarfoguetao\` e envie seu foguetÃ£o para o espaÃ§o!`)
                return msg1.delete();
            } else {

            msg1.delete();

            let foguetao = new Discord.RichEmbed()
            .setAuthor(`Loja de FoguetÃµes`, `https://img.icons8.com/cotton/2x/online-shop--v1.png`)
            .setDescription(`\n\u200b\nOpa! VocÃª quer viajar pelo espaÃ§o cideral e descubrir novos planetas, ou estÃ¡ aqui apenas vendo? Compre os componentes do seu foguetÃ£o e viaje para novas conquistas!\n\u200b`)
            .addField(`ğŸ”‹ CombustÃ­vel`, `PreÃ§o: 1.500 coins`, true)
            .addField(`ğŸ”Œ Motor/Engine`, `PreÃ§o: 2.500 coins`, true)
            .addField(`ğŸš€ Lataria Externa`, `PreÃ§o: 2.500 coins\n\u200b`, true)
            .setFooter(`CashMarket - FoguetÃµes`)
            .setTimestamp()
            .setThumbnail(`https://images.emojiterra.com/mozilla/512px/1f680.png`)
            .setColor(`#FFBB00`)

            let msg2 = await message.channel.send(foguetao)

    let emojis = ['ğŸ”‹', 'ğŸ”Œ', 'ğŸš€'];
    for (const i in emojis) await msg2.react(emojis[i]);

    const filter = (r, u) => r.me && u.equals(message.author), 
    collector = msg2.createReactionCollector(filter, { max: 1, time: 5 * 60 * 1000 });

collector.on('collect', async (r) => {
    switch (r.emoji.name) {
        case 'ğŸ”‹': {

            let ref1 = await database.ref(`Economia/${message.author.id}`)
            let snap1 = await ref1.once('value')

            let ref = await database.ref(`FoguetÃ£o/${message.author.id}/CombustÃ­vel`)
            let snap = await ref.once('value')
            
            if(snap.val() == null){

            if(snap1.val() == null){
                return message.channel.send(`<:erro:664956331643371532> O nosso sistema de economia Ã© protegido com um registro. Para se registrar, vocÃª deve digitar: \`registrar\``)
            } else {

                let coins = snap1.val().coins

                if(coins < 1500){
                    return message.channel.send(`<:dinheiro:654335597527171072> VocÃª nÃ£o contÃ©m **__1.500 coins__** para comprar este produto.`)
                } else {

                    let coinstotal = parseInt(coins - 1500)

                    database.ref(`Economia/${message.author.id}`)
                    .update({
                        coins: coinstotal
                    });

                    database.ref(`FoguetÃ£o/${message.author.id}/CombustÃ­vel`)
                    .update({
                        combustivel: `comprado`
                    });

                    msg2.delete();
                    message.channel.send(`ğŸ”‹ VocÃª comprou o \`CombustÃ­vel\` do foguetÃ£o!`)

                }

            }

        } else {
            return message.channel.send(`<:erro:664956331643371532> VocÃª jÃ¡ contÃ©m o \`CombustÃ­vel\` do foguetÃ£o!`)
        }

            break;
        }
        case 'ğŸ”Œ': {

            let ref1 = await database.ref(`Economia/${message.author.id}`)
            let snap1 = await ref1.once('value')

            let ref = await database.ref(`FoguetÃ£o/${message.author.id}/Motor`)
            let snap = await ref.once('value')
            
            if(snap.val() == null){

            if(snap1.val() == null){
                return message.channel.send(`<:erro:664956331643371532> O nosso sistema de economia Ã© protegido com um registro. Para se registrar, vocÃª deve digitar: \`registrar\``)
            } else {

                let coins = snap1.val().coins

                if(coins < 2500){
                    return message.channel.send(`<:dinheiro:654335597527171072> VocÃª nÃ£o contÃ©m **__2.500 coins__** para comprar este produto.`)
                } else {

                    let coinstotal = parseInt(coins - 2500)

                    database.ref(`Economia/${message.author.id}`)
                    .update({
                        coins: coinstotal
                    });

                    database.ref(`FoguetÃ£o/${message.author.id}/Motor`)
                    .update({
                        motor: `comprado`
                    });

                    msg2.delete();
                    message.channel.send(`ğŸ”Œ VocÃª comprou o \`Motor\` do foguetÃ£o!`)

                }

            }

        } else {
            return message.channel.send(`<:erro:664956331643371532> VocÃª jÃ¡ contÃ©m o \`Motor\` do foguetÃ£o!`)
        }

            break;
        }
        case 'ğŸš€': {

            let ref1 = await database.ref(`Economia/${message.author.id}`)
            let snap1 = await ref1.once('value')

            let ref = await database.ref(`FoguetÃ£o/${message.author.id}/Lataria`)
            let snap = await ref.once('value')
            
            if(snap.val() == null){

            if(snap1.val() == null){
                return message.channel.send(`<:erro:664956331643371532> O nosso sistema de economia Ã© protegido com um registro. Para se registrar, vocÃª deve digitar: \`registrar\``)
            } else {

                let coins = snap1.val().coins

                if(coins < 2500){
                    return message.channel.send(`<:dinheiro:654335597527171072> VocÃª nÃ£o contÃ©m **__2.500 coins__** para comprar este produto.`)
                } else {

                    let coinstotal = parseInt(coins - 2500)

                    database.ref(`Economia/${message.author.id}`)
                    .update({
                        coins: coinstotal
                    });

                    database.ref(`FoguetÃ£o/${message.author.id}/Lataria`)
                    .update({
                        lataria: `comprado`
                    });

                    msg2.delete();
                    message.channel.send(`ğŸš€ VocÃª comprou a \`Lataria\` do foguetÃ£o!`)

                }

            }

        } else {
            return message.channel.send(`<:erro:664956331643371532> VocÃª jÃ¡ contÃ©m a \`Lataria\` do foguetÃ£o!`)
        }

            break;
        }
    }
    })
}
            break;
        }

    }
        })

}   